import declassifyutil 
(* testing various corner cases of declassification *)
let val secretAlice = 1 raisedTo `{alice}`
    val secretBob = 1 raisedTo `{bob}`
    val aliceAuth = attenuate (authority, `{alice}`)
    val bobAuth = attenuate (authority, `{bob}`)


    val (a,b) = if secretAlice > 0 then (1,2) else (3,4)
    val (x,y) = if secretBob > 0 then (5,6) else (7,8)
    val _ = blockdecl authority 
    val (a1, b1) = declassifydeep ( (a,b), aliceAuth, `{}` )
    val _ = if secretBob  > secretAlice then () else ()
in 
    adv a1
end